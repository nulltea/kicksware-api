image:
    name: docker/compose:1.25.0
    entrypoint: [""]

services:
    - docker:stable-dind

stages:
    - build
    - test
    - deploy

before_script:
    - docker version
    - docker-compose version
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - export IMAGE=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
    - export MIDDLEWARE_IMAGE=$IMAGE:middleware

step-proxy-deploy:
    stage: deploy
    before_script:
      - export DYNAMIC_ENV_VAR=DEVELOP
      - echo ${CI_PROJECT_DIR}
      - echo ${CI_PROJECT_NAME}
      - mkdir /source/repos/${CI_PROJECT_NAME}
      - ls -r /builds/root/
      - cp -r /builds/root/. /source/repos/
    tags:
      - deploy
      - proxy
    script:
      - echo setting up env $DYNAMIC_ENV_VAR
      - docker-compose down
      - docker-compose build
      - docker-compose up -d


step-middleware-deploy:
    stage: deploy
    before_script:
    - export DYNAMIC_ENV_VAR=DEVELOP
    tags:
      - middleware
      - deploy
    script:
      - echo setting up env $DYNAMIC_ENV_VAR
      # - docker-compose -f middleware-service/docker-compose.yml down
      # - docker-compose -f middleware-service/docker-compose.yml build
      # - docker-compose -f middleware-service/docker-compose.yml up -d

step-webapp-style:
  stage: build
  image: node:8-alpine
  variables:
    NODE_ENV: "development"
  tags:
    - webapp
    - build
    - deploy
  before_script:
    - apk add --update bash
    - apk add --update git && rm -rf /tmp/* /var/cache/apk/*
    - npm install
    - npm install -g lessc-each
  script:
    - mkdir web-app-service/Web/wwwroot/styles/css
    - for dir in web-app-service/Web/wwwroot/styles/less/*;
          do lessc-each web-app-service/Web/wwwroot/styles/less/$(basename ${dir}) web-app-service/Web/wwwroot/styles/css/$(basename ${dir}); 
      done
  artifacts:
    paths:
      - web-app-service/Web/wwwroot/styles/css

step-webapp-deploy:
    stage: deploy
    before_script:
    - export DYNAMIC_ENV_VAR=DEVELOP
    tags:
      - webapp
      - deploy
    script:
      - echo setting up env $DYNAMIC_ENV_VAR
      - docker-compose -f web-app-service/docker-compose.yml down
      - docker-compose -f web-app-service/docker-compose.yml build
      - docker-compose -f web-app-service/docker-compose.yml up -d
    dependencies:
      - step-webapp-style

