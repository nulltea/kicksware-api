// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: proto/reference.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BaseModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId    string `protobuf:"bytes,1,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Brand       string `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	BaseModel   string `protobuf:"bytes,4,opt,name=baseModel,proto3" json:"baseModel,omitempty"`
	Hero        string `protobuf:"bytes,5,opt,name=hero,proto3" json:"hero,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *BaseModel) Reset() {
	*x = BaseModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reference_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseModel) ProtoMessage() {}

func (x *BaseModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reference_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseModel.ProtoReflect.Descriptor instead.
func (*BaseModel) Descriptor() ([]byte, []int) {
	return file_proto_reference_proto_rawDescGZIP(), []int{0}
}

func (x *BaseModel) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *BaseModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseModel) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *BaseModel) GetBaseModel() string {
	if x != nil {
		return x.BaseModel
	}
	return ""
}

func (x *BaseModel) GetHero() string {
	if x != nil {
		return x.Hero
	}
	return ""
}

func (x *BaseModel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Brand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId    string `protobuf:"bytes,1,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Logo        string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
	Hero        string `protobuf:"bytes,4,opt,name=hero,proto3" json:"hero,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Brand) Reset() {
	*x = Brand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reference_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Brand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Brand) ProtoMessage() {}

func (x *Brand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reference_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Brand.ProtoReflect.Descriptor instead.
func (*Brand) Descriptor() ([]byte, []int) {
	return file_proto_reference_proto_rawDescGZIP(), []int{1}
}

func (x *Brand) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *Brand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Brand) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Brand) GetHero() string {
	if x != nil {
		return x.Hero
	}
	return ""
}

func (x *Brand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId    string `protobuf:"bytes,1,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Brand       string `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	BaseModel   string `protobuf:"bytes,4,opt,name=baseModel,proto3" json:"baseModel,omitempty"`
	Hero        string `protobuf:"bytes,5,opt,name=hero,proto3" json:"hero,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reference_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reference_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_proto_reference_proto_rawDescGZIP(), []int{2}
}

func (x *Model) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *Model) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Model) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Model) GetBaseModel() string {
	if x != nil {
		return x.BaseModel
	}
	return ""
}

func (x *Model) GetHero() string {
	if x != nil {
		return x.Hero
	}
	return ""
}

func (x *Model) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SneakerBrand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId    string `protobuf:"bytes,1,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Logo        string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
	Hero        string `protobuf:"bytes,4,opt,name=hero,proto3" json:"hero,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *SneakerBrand) Reset() {
	*x = SneakerBrand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reference_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SneakerBrand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SneakerBrand) ProtoMessage() {}

func (x *SneakerBrand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reference_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SneakerBrand.ProtoReflect.Descriptor instead.
func (*SneakerBrand) Descriptor() ([]byte, []int) {
	return file_proto_reference_proto_rawDescGZIP(), []int{3}
}

func (x *SneakerBrand) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *SneakerBrand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SneakerBrand) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *SneakerBrand) GetHero() string {
	if x != nil {
		return x.Hero
	}
	return ""
}

func (x *SneakerBrand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SneakerModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId    string `protobuf:"bytes,1,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Brand       string `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	BaseModel   string `protobuf:"bytes,4,opt,name=baseModel,proto3" json:"baseModel,omitempty"`
	Hero        string `protobuf:"bytes,5,opt,name=hero,proto3" json:"hero,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *SneakerModel) Reset() {
	*x = SneakerModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reference_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SneakerModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SneakerModel) ProtoMessage() {}

func (x *SneakerModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reference_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SneakerModel.ProtoReflect.Descriptor instead.
func (*SneakerModel) Descriptor() ([]byte, []int) {
	return file_proto_reference_proto_rawDescGZIP(), []int{4}
}

func (x *SneakerModel) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *SneakerModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SneakerModel) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *SneakerModel) GetBaseModel() string {
	if x != nil {
		return x.BaseModel
	}
	return ""
}

func (x *SneakerModel) GetHero() string {
	if x != nil {
		return x.Hero
	}
	return ""
}

func (x *SneakerModel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SneakerReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId       string               `protobuf:"bytes,1,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	ManufactureSku string               `protobuf:"bytes,2,opt,name=manufactureSku,proto3" json:"manufactureSku,omitempty"`
	BrandName      string               `protobuf:"bytes,3,opt,name=brandName,proto3" json:"brandName,omitempty"`
	Brand          *SneakerBrand        `protobuf:"bytes,4,opt,name=brand,proto3" json:"brand,omitempty"`
	ModelName      string               `protobuf:"bytes,5,opt,name=modelName,proto3" json:"modelName,omitempty"`
	Model          *SneakerModel        `protobuf:"bytes,6,opt,name=model,proto3" json:"model,omitempty"`
	BaseModelName  string               `protobuf:"bytes,7,opt,name=baseModelName,proto3" json:"baseModelName,omitempty"`
	BaseModel      *SneakerModel        `protobuf:"bytes,8,opt,name=baseModel,proto3" json:"baseModel,omitempty"`
	Description    string               `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Color          string               `protobuf:"bytes,10,opt,name=color,proto3" json:"color,omitempty"`
	Gender         string               `protobuf:"bytes,11,opt,name=gender,proto3" json:"gender,omitempty"`
	Nickname       string               `protobuf:"bytes,12,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Materials      []string             `protobuf:"bytes,13,rep,name=materials,proto3" json:"materials,omitempty"`
	Categories     []string             `protobuf:"bytes,14,rep,name=categories,proto3" json:"categories,omitempty"`
	ReleaseDate    *timestamp.Timestamp `protobuf:"bytes,15,opt,name=releaseDate,proto3" json:"releaseDate,omitempty"`
	Price          float64              `protobuf:"fixed64,16,opt,name=price,proto3" json:"price,omitempty"`
	ImageLink      string               `protobuf:"bytes,17,opt,name=imageLink,proto3" json:"imageLink,omitempty"`
	ImageLinks     []string             `protobuf:"bytes,18,rep,name=imageLinks,proto3" json:"imageLinks,omitempty"`
	StadiumUrl     string               `protobuf:"bytes,19,opt,name=stadiumUrl,proto3" json:"stadiumUrl,omitempty"`
	Likes          int64                `protobuf:"varint,20,opt,name=likes,proto3" json:"likes,omitempty"`
	Liked          bool                 `protobuf:"varint,21,opt,name=liked,proto3" json:"liked,omitempty"`
}

func (x *SneakerReference) Reset() {
	*x = SneakerReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reference_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SneakerReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SneakerReference) ProtoMessage() {}

func (x *SneakerReference) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reference_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SneakerReference.ProtoReflect.Descriptor instead.
func (*SneakerReference) Descriptor() ([]byte, []int) {
	return file_proto_reference_proto_rawDescGZIP(), []int{5}
}

func (x *SneakerReference) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *SneakerReference) GetManufactureSku() string {
	if x != nil {
		return x.ManufactureSku
	}
	return ""
}

func (x *SneakerReference) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *SneakerReference) GetBrand() *SneakerBrand {
	if x != nil {
		return x.Brand
	}
	return nil
}

func (x *SneakerReference) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *SneakerReference) GetModel() *SneakerModel {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *SneakerReference) GetBaseModelName() string {
	if x != nil {
		return x.BaseModelName
	}
	return ""
}

func (x *SneakerReference) GetBaseModel() *SneakerModel {
	if x != nil {
		return x.BaseModel
	}
	return nil
}

func (x *SneakerReference) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SneakerReference) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *SneakerReference) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *SneakerReference) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SneakerReference) GetMaterials() []string {
	if x != nil {
		return x.Materials
	}
	return nil
}

func (x *SneakerReference) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *SneakerReference) GetReleaseDate() *timestamp.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *SneakerReference) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SneakerReference) GetImageLink() string {
	if x != nil {
		return x.ImageLink
	}
	return ""
}

func (x *SneakerReference) GetImageLinks() []string {
	if x != nil {
		return x.ImageLinks
	}
	return nil
}

func (x *SneakerReference) GetStadiumUrl() string {
	if x != nil {
		return x.StadiumUrl
	}
	return ""
}

func (x *SneakerReference) GetLikes() int64 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *SneakerReference) GetLiked() bool {
	if x != nil {
		return x.Liked
	}
	return false
}

type ReferenceFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceID   []string          `protobuf:"bytes,1,rep,name=ReferenceID,proto3" json:"ReferenceID,omitempty"`
	RequestQuery  map[string]string `protobuf:"bytes,2,rep,name=RequestQuery,proto3" json:"RequestQuery,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RequestParams *RequestParams    `protobuf:"bytes,3,opt,name=RequestParams,proto3" json:"RequestParams,omitempty"`
}

func (x *ReferenceFilter) Reset() {
	*x = ReferenceFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reference_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferenceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferenceFilter) ProtoMessage() {}

func (x *ReferenceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reference_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferenceFilter.ProtoReflect.Descriptor instead.
func (*ReferenceFilter) Descriptor() ([]byte, []int) {
	return file_proto_reference_proto_rawDescGZIP(), []int{6}
}

func (x *ReferenceFilter) GetReferenceID() []string {
	if x != nil {
		return x.ReferenceID
	}
	return nil
}

func (x *ReferenceFilter) GetRequestQuery() map[string]string {
	if x != nil {
		return x.RequestQuery
	}
	return nil
}

func (x *ReferenceFilter) GetRequestParams() *RequestParams {
	if x != nil {
		return x.RequestParams
	}
	return nil
}

type ReferenceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	References    []*SneakerReference `protobuf:"bytes,1,rep,name=References,proto3" json:"References,omitempty"`
	RequestParams *RequestParams      `protobuf:"bytes,2,opt,name=RequestParams,proto3" json:"RequestParams,omitempty"`
}

func (x *ReferenceInput) Reset() {
	*x = ReferenceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reference_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferenceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferenceInput) ProtoMessage() {}

func (x *ReferenceInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reference_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferenceInput.ProtoReflect.Descriptor instead.
func (*ReferenceInput) Descriptor() ([]byte, []int) {
	return file_proto_reference_proto_rawDescGZIP(), []int{7}
}

func (x *ReferenceInput) GetReferences() []*SneakerReference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *ReferenceInput) GetRequestParams() *RequestParams {
	if x != nil {
		return x.RequestParams
	}
	return nil
}

type ReferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	References []*SneakerReference `protobuf:"bytes,1,rep,name=References,proto3" json:"References,omitempty"`
	Count      int64               `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *ReferenceResponse) Reset() {
	*x = ReferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reference_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferenceResponse) ProtoMessage() {}

func (x *ReferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reference_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferenceResponse.ProtoReflect.Descriptor instead.
func (*ReferenceResponse) Descriptor() ([]byte, []int) {
	return file_proto_reference_proto_rawDescGZIP(), []int{8}
}

func (x *ReferenceResponse) GetReferences() []*SneakerReference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *ReferenceResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type RequestParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit         int32  `protobuf:"varint,1,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset        int32  `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	SortBy        string `protobuf:"bytes,3,opt,name=SortBy,proto3" json:"SortBy,omitempty"`
	SortDirection string `protobuf:"bytes,4,opt,name=SortDirection,proto3" json:"SortDirection,omitempty"`
}

func (x *RequestParams) Reset() {
	*x = RequestParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_reference_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestParams) ProtoMessage() {}

func (x *RequestParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_reference_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestParams.ProtoReflect.Descriptor instead.
func (*RequestParams) Descriptor() ([]byte, []int) {
	return file_proto_reference_proto_rawDescGZIP(), []int{9}
}

func (x *RequestParams) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RequestParams) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RequestParams) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *RequestParams) GetSortDirection() string {
	if x != nil {
		return x.SortDirection
	}
	return ""
}

var File_proto_reference_proto protoreflect.FileDescriptor

var file_proto_reference_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa5, 0x01, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x65, 0x72, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x05,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x72,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x88, 0x01, 0x0a, 0x0c, 0x53, 0x6e, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa8, 0x01, 0x0a, 0x0c, 0x53,
	0x6e, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x65, 0x72, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc9, 0x05, 0x0a, 0x10, 0x53, 0x6e, 0x65, 0x61, 0x6b, 0x65,
	0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x75, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6e, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6e, 0x65,
	0x61, 0x6b, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x6e, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x09,
	0x62, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x64, 0x69, 0x75, 0x6d,
	0x55, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x64, 0x69,
	0x75, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6b, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65,
	0x64, 0x22, 0xfe, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x4c, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3a, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x85, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x6e, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x3a,
	0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x62, 0x0a, 0x11, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x0a, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6e, 0x65, 0x61,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7b,
	0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x6f,
	0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xaf, 0x02, 0x0a, 0x10,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x45, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x47, 0x0a, 0x0f, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x44, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x45, 0x0a, 0x0e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_reference_proto_rawDescOnce sync.Once
	file_proto_reference_proto_rawDescData = file_proto_reference_proto_rawDesc
)

func file_proto_reference_proto_rawDescGZIP() []byte {
	file_proto_reference_proto_rawDescOnce.Do(func() {
		file_proto_reference_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_reference_proto_rawDescData)
	})
	return file_proto_reference_proto_rawDescData
}

var file_proto_reference_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_reference_proto_goTypes = []interface{}{
	(*BaseModel)(nil),           // 0: proto.BaseModel
	(*Brand)(nil),               // 1: proto.Brand
	(*Model)(nil),               // 2: proto.Model
	(*SneakerBrand)(nil),        // 3: proto.SneakerBrand
	(*SneakerModel)(nil),        // 4: proto.SneakerModel
	(*SneakerReference)(nil),    // 5: proto.SneakerReference
	(*ReferenceFilter)(nil),     // 6: proto.ReferenceFilter
	(*ReferenceInput)(nil),      // 7: proto.ReferenceInput
	(*ReferenceResponse)(nil),   // 8: proto.ReferenceResponse
	(*RequestParams)(nil),       // 9: proto.RequestParams
	nil,                         // 10: proto.ReferenceFilter.RequestQueryEntry
	(*timestamp.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_proto_reference_proto_depIdxs = []int32{
	3,  // 0: proto.SneakerReference.brand:type_name -> proto.SneakerBrand
	4,  // 1: proto.SneakerReference.model:type_name -> proto.SneakerModel
	4,  // 2: proto.SneakerReference.baseModel:type_name -> proto.SneakerModel
	11, // 3: proto.SneakerReference.releaseDate:type_name -> google.protobuf.Timestamp
	10, // 4: proto.ReferenceFilter.RequestQuery:type_name -> proto.ReferenceFilter.RequestQueryEntry
	9,  // 5: proto.ReferenceFilter.RequestParams:type_name -> proto.RequestParams
	5,  // 6: proto.ReferenceInput.References:type_name -> proto.SneakerReference
	9,  // 7: proto.ReferenceInput.RequestParams:type_name -> proto.RequestParams
	5,  // 8: proto.ReferenceResponse.References:type_name -> proto.SneakerReference
	6,  // 9: proto.ReferenceService.GetReferences:input_type -> proto.ReferenceFilter
	6,  // 10: proto.ReferenceService.CountReferences:input_type -> proto.ReferenceFilter
	7,  // 11: proto.ReferenceService.AddReferences:input_type -> proto.ReferenceInput
	7,  // 12: proto.ReferenceService.EditReferences:input_type -> proto.ReferenceInput
	8,  // 13: proto.ReferenceService.GetReferences:output_type -> proto.ReferenceResponse
	8,  // 14: proto.ReferenceService.CountReferences:output_type -> proto.ReferenceResponse
	8,  // 15: proto.ReferenceService.AddReferences:output_type -> proto.ReferenceResponse
	8,  // 16: proto.ReferenceService.EditReferences:output_type -> proto.ReferenceResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_reference_proto_init() }
func file_proto_reference_proto_init() {
	if File_proto_reference_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_reference_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reference_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Brand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reference_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reference_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SneakerBrand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reference_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SneakerModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reference_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SneakerReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reference_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferenceFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reference_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferenceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reference_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_reference_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_reference_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_reference_proto_goTypes,
		DependencyIndexes: file_proto_reference_proto_depIdxs,
		MessageInfos:      file_proto_reference_proto_msgTypes,
	}.Build()
	File_proto_reference_proto = out.File
	file_proto_reference_proto_rawDesc = nil
	file_proto_reference_proto_goTypes = nil
	file_proto_reference_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReferenceServiceClient is the client API for ReferenceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReferenceServiceClient interface {
	GetReferences(ctx context.Context, in *ReferenceFilter, opts ...grpc.CallOption) (ReferenceService_GetReferencesClient, error)
	CountReferences(ctx context.Context, in *ReferenceFilter, opts ...grpc.CallOption) (ReferenceService_CountReferencesClient, error)
	AddReferences(ctx context.Context, in *ReferenceInput, opts ...grpc.CallOption) (ReferenceService_AddReferencesClient, error)
	EditReferences(ctx context.Context, in *ReferenceInput, opts ...grpc.CallOption) (ReferenceService_EditReferencesClient, error)
}

type referenceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewReferenceServiceClient(cc grpc.ClientConnInterface) ReferenceServiceClient {
	return &referenceServiceClient{cc}
}

func (c *referenceServiceClient) GetReferences(ctx context.Context, in *ReferenceFilter, opts ...grpc.CallOption) (ReferenceService_GetReferencesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ReferenceService_serviceDesc.Streams[0], "/proto.ReferenceService/GetReferences", opts...)
	if err != nil {
		return nil, err
	}
	x := &referenceServiceGetReferencesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ReferenceService_GetReferencesClient interface {
	Recv() (*ReferenceResponse, error)
	grpc.ClientStream
}

type referenceServiceGetReferencesClient struct {
	grpc.ClientStream
}

func (x *referenceServiceGetReferencesClient) Recv() (*ReferenceResponse, error) {
	m := new(ReferenceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *referenceServiceClient) CountReferences(ctx context.Context, in *ReferenceFilter, opts ...grpc.CallOption) (ReferenceService_CountReferencesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ReferenceService_serviceDesc.Streams[1], "/proto.ReferenceService/CountReferences", opts...)
	if err != nil {
		return nil, err
	}
	x := &referenceServiceCountReferencesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ReferenceService_CountReferencesClient interface {
	Recv() (*ReferenceResponse, error)
	grpc.ClientStream
}

type referenceServiceCountReferencesClient struct {
	grpc.ClientStream
}

func (x *referenceServiceCountReferencesClient) Recv() (*ReferenceResponse, error) {
	m := new(ReferenceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *referenceServiceClient) AddReferences(ctx context.Context, in *ReferenceInput, opts ...grpc.CallOption) (ReferenceService_AddReferencesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ReferenceService_serviceDesc.Streams[2], "/proto.ReferenceService/AddReferences", opts...)
	if err != nil {
		return nil, err
	}
	x := &referenceServiceAddReferencesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ReferenceService_AddReferencesClient interface {
	Recv() (*ReferenceResponse, error)
	grpc.ClientStream
}

type referenceServiceAddReferencesClient struct {
	grpc.ClientStream
}

func (x *referenceServiceAddReferencesClient) Recv() (*ReferenceResponse, error) {
	m := new(ReferenceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *referenceServiceClient) EditReferences(ctx context.Context, in *ReferenceInput, opts ...grpc.CallOption) (ReferenceService_EditReferencesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ReferenceService_serviceDesc.Streams[3], "/proto.ReferenceService/EditReferences", opts...)
	if err != nil {
		return nil, err
	}
	x := &referenceServiceEditReferencesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ReferenceService_EditReferencesClient interface {
	Recv() (*ReferenceResponse, error)
	grpc.ClientStream
}

type referenceServiceEditReferencesClient struct {
	grpc.ClientStream
}

func (x *referenceServiceEditReferencesClient) Recv() (*ReferenceResponse, error) {
	m := new(ReferenceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ReferenceServiceServer is the server API for ReferenceService service.
type ReferenceServiceServer interface {
	GetReferences(*ReferenceFilter, ReferenceService_GetReferencesServer) error
	CountReferences(*ReferenceFilter, ReferenceService_CountReferencesServer) error
	AddReferences(*ReferenceInput, ReferenceService_AddReferencesServer) error
	EditReferences(*ReferenceInput, ReferenceService_EditReferencesServer) error
}

// UnimplementedReferenceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReferenceServiceServer struct {
}

func (*UnimplementedReferenceServiceServer) GetReferences(*ReferenceFilter, ReferenceService_GetReferencesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetReferences not implemented")
}
func (*UnimplementedReferenceServiceServer) CountReferences(*ReferenceFilter, ReferenceService_CountReferencesServer) error {
	return status.Errorf(codes.Unimplemented, "method CountReferences not implemented")
}
func (*UnimplementedReferenceServiceServer) AddReferences(*ReferenceInput, ReferenceService_AddReferencesServer) error {
	return status.Errorf(codes.Unimplemented, "method AddReferences not implemented")
}
func (*UnimplementedReferenceServiceServer) EditReferences(*ReferenceInput, ReferenceService_EditReferencesServer) error {
	return status.Errorf(codes.Unimplemented, "method EditReferences not implemented")
}

func RegisterReferenceServiceServer(s *grpc.Server, srv ReferenceServiceServer) {
	s.RegisterService(&_ReferenceService_serviceDesc, srv)
}

func _ReferenceService_GetReferences_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReferenceFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ReferenceServiceServer).GetReferences(m, &referenceServiceGetReferencesServer{stream})
}

type ReferenceService_GetReferencesServer interface {
	Send(*ReferenceResponse) error
	grpc.ServerStream
}

type referenceServiceGetReferencesServer struct {
	grpc.ServerStream
}

func (x *referenceServiceGetReferencesServer) Send(m *ReferenceResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ReferenceService_CountReferences_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReferenceFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ReferenceServiceServer).CountReferences(m, &referenceServiceCountReferencesServer{stream})
}

type ReferenceService_CountReferencesServer interface {
	Send(*ReferenceResponse) error
	grpc.ServerStream
}

type referenceServiceCountReferencesServer struct {
	grpc.ServerStream
}

func (x *referenceServiceCountReferencesServer) Send(m *ReferenceResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ReferenceService_AddReferences_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReferenceInput)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ReferenceServiceServer).AddReferences(m, &referenceServiceAddReferencesServer{stream})
}

type ReferenceService_AddReferencesServer interface {
	Send(*ReferenceResponse) error
	grpc.ServerStream
}

type referenceServiceAddReferencesServer struct {
	grpc.ServerStream
}

func (x *referenceServiceAddReferencesServer) Send(m *ReferenceResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ReferenceService_EditReferences_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReferenceInput)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ReferenceServiceServer).EditReferences(m, &referenceServiceEditReferencesServer{stream})
}

type ReferenceService_EditReferencesServer interface {
	Send(*ReferenceResponse) error
	grpc.ServerStream
}

type referenceServiceEditReferencesServer struct {
	grpc.ServerStream
}

func (x *referenceServiceEditReferencesServer) Send(m *ReferenceResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ReferenceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ReferenceService",
	HandlerType: (*ReferenceServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetReferences",
			Handler:       _ReferenceService_GetReferences_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CountReferences",
			Handler:       _ReferenceService_CountReferences_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "AddReferences",
			Handler:       _ReferenceService_AddReferences_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EditReferences",
			Handler:       _ReferenceService_EditReferences_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/reference.proto",
}
