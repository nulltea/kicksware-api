@using Core.Services
@using Infrastructure.Usecase.Models
@using Core.Entities.References
@using Core.Entities
@using Core.Reference
@model Core.Entities.Users.User
@inject ISneakerReferenceService Service

<div class="row section-content" id="buying-content">
	<h3>PURCHASED SNEAKERS</h3>
	@{
		if (Model?.UniqueID != null)
		{
			var purchasedSneakers = new FilteredModel<SneakerReference>(Service);
			// purchasedSneakers.AddHiddenFilterGroup<Order>("user_id", ExpressionType.Equal).AssignParameter(Model.UniqueID);
			// await purchasedSneakers.FetchPageAsync(1); TODO orders foreign key filtering
			await Html.RenderPartialAsync("../Shop/Partial/ReferencesPartial", purchasedSneakers);
		}
	}
</div>
