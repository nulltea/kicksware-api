@using web_app_service.Utils.Helpers
@model Core.Model.IFilteredModel<Core.Entities.Reference.SneakerReference>

@if (Model is null || !Model.Any())
{
	<div class="no-result-content">
		<span class="no-result-title">NOTHING HERE</span>
		@Html.VectorIconRender("sneaker_not_found.svg")
		<span class="no-result-subtitle">WE COULDN'T FIND ANY SNEAKERS MATCHING YOUR SEARCH</span>
		<span class="no-result-subtitle">PLEASE TRY SEARCH AGAIN OR START FROM SCRATCH</span>
	</div>
	return;
}
<div class="products-view grid">
	@foreach (var reference in Model)
	{
		if (reference == null)
		{
			continue;
		}
		var price = reference.Price != 0m ? $"${reference.Price}" : string.Empty;
		<div class="product-cell">
			<div class="info-header">
				<div class="price">@price</div>
			</div>
			<div class="thumb">
				<img src="@reference.ImagePath" alt="">
			</div>
			@*@if (DateTime.Today.Subtract(reference.AddedAt).Days < 5)
									{
										<div class="product_extra product_new">
											<a>New</a>
										</div>
									}*@
			<div class="info-footer">
				<div class="brand-title">
					<a class="underline" asp-controller="Shop" asp-action="ProductItem" asp-route-productId=@reference.UniqueId>@Html.DisplayFor(modelItem => reference.BrandName)</a>
				</div>
				<div class="model-title">
					@*TODO link to model page*@
					<a class="underline" asp-controller="Shop" asp-action="ProductItem" asp-route-productId=@reference.UniqueId>@Html.DisplayFor(modelItem => reference.ModelName)</a>
				</div>
				<div class="description">
					@reference.Description
				</div>
				<div class="favorite">
					<input type="checkbox"/>
					@Html.VectorIconRender("favorite.svg")
				</div>
			</div>
		</div>
	}
</div>

<div class="row pagination-control">
	<nav>
		<div class="left">
			<ul>
				<li class="prev">
					<a asp-action="Products" asp-route-page="@(Model.CurrentPage - 1)">❮</a>
				</li>
				@if (Model.HasPagePrevious)
				{
					@for (var pageIndex = new[] {Model.CurrentPage - 3, 1}.Max(); pageIndex <= Model.CurrentPage - 1; pageIndex++)
					{
						<li>
							<a asp-action="Products" asp-route-page="@pageIndex">@pageIndex</a>
						</li>
					}
				}
			</ul>
		</div>
		<div class="caption">
			@if (Model.HasPageNext)
			{
				<a asp-action="Products" asp-route-page="@(Model.CurrentPage + 1)">NEXT</a>
			}
			else
			{
				<a>NEXT</a>
			}
		</div>
		<div class="right">
			<ul>
				@if (Model.HasPageNext)
				{
					@for (var pageIndex = Model.CurrentPage + 1; pageIndex <= new[] {Model.CurrentPage + 3, Model.PagesTotal}.Min(); pageIndex++)
					{
						<li>
							<a asp-action="Products" asp-route-page="@pageIndex">@pageIndex</a>
						</li>
					}
				}
				<li class="next">
					<a asp-action="Products" asp-route-page="@(Model.CurrentPage + 1)">❯</a>
				</li>
			</ul>
		</div>
	</nav>
</div>