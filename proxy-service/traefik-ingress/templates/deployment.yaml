apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
{{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: web
              containerPort: {{ .Values.service.port }}
            - name: websecure
              containerPort: {{ .Values.service.securePort }}
            - name: admin
              containerPort: {{ .Values.service.adminPort }}
          args:
            - --api
            - --api.insecure={{ .Values.api.insecure }}
            - --api.dashboard={{ .Values.api.dashboard }}
            - --ping=true
            - --log.level={{ .Values.log.level }}
            {{- if .Values.providers.file.enabled }}
            - --providers.file=true
            - --providers.file.directory={{ .Values.providers.file.directory }}
            - --providers.file.watch={{ .Values.providers.file.watch }}
            {{- end }}
            - --providers.kubernetescrd={{ .Values.providers.kubernetescrd.enabled }}
            - --providers.kubernetesingress={{ .Values.providers.kubernetescrd.enabled }}
            - '--entryPoints.web.address=:{{ .Values.service.port}}'
            - '--entryPoints.websecure.address=:{{ .Values.service.securePort}}'
            - '--entryPoints.traefik.address=:{{ .Values.service.adminPort}}'
            {{- if .Values.acme.enabled }}
            - --certificatesResolvers.le.acme.email={{ .Values.acme.email}}
            - --certificatesResolvers.le.acme.storage={{ .Values.acme.storage}}
            - --certificatesResolvers.le.acme.dnschallenge={{ .Values.acme.dnsChallenge.enabled}}
            - --certificatesResolvers.le.acme.dnschallenge.provider={{ .Values.acme.dnsChallenge.provider}}
            {{- end }}
            {{- with .Values.serverTransport }}
              {{- with .rootCAs }}
            - --serversTransport.rootCAs={{.}}
              {{- end }}
              {{- with .insecureSkipVerify }}
            - --serversTransport.insecureSkipVerify={{.}}
              {{- end }}
            {{- end }}
            - --accesslog={{ .Values.log.accesslog }}
          volumeMounts:
          {{- range .Values.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          env:
            - name:  {{ .Values.acme.dnsChallenge.envName}}
              value: {{ .Values.acme.dnsChallenge.token}}
          livenessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.service.adminPort }}
          readinessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.service.adminPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        {{- range .Values.volumes }}
        - name: {{ .name }}
          {{- if .hostPath }}
          hostPath:
            path: {{ .hostPathBase }}{{ .hostPath }}
            type: {{ .type }}
          {{- end }}
        {{- end }}
